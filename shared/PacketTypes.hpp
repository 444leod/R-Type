/*
** EPITECH PROJECT, 2024
** rtype
** File description:
** PacketTypes.hpp
*/

#ifndef PACKET_TYPES_HPP
#define PACKET_TYPES_HPP

/**
 * @brief This enum will describe what the packet is for.
 *
 *  - NONE: No packet type
 *  - CONNECT: Connection packet
 *  - DISCONNECT: Disconnection packet
 *  - MESSAGE: Message packet (temporary
 *  - POSITION: Position packet (temporary)
 */
enum class PACKET_TYPE
{
    NONE = 0,

    CONNECT,
    DISCONNECT,
    AUTHENTICATED,
    NEW_CLIENT,
    CLIENT_DISCONNECTED,

    MESSAGE,

    START,

    LOAD_SCENE,
    POSITION,
    YOUR_SHIP,
    NEW_SHIP,

    SHIP_MOVEMENT,
    USER_INPUT,

    NEW_PROJECTILE,
    NEW_MONSTER,
    MONSTER_KILLED
};

inline const std::map<PACKET_TYPE, std::string> packetTypeToString = {
  {PACKET_TYPE::NONE, "NONE"},
  {PACKET_TYPE::CONNECT, "CONNECT"},
  {PACKET_TYPE::DISCONNECT, "DISCONNECT"},
  {PACKET_TYPE::AUTHENTICATED, "AUTHENTICATED"},
  {PACKET_TYPE::NEW_CLIENT, "NEW_CLIENT"},
  {PACKET_TYPE::CLIENT_DISCONNECTED, "CLIENT_DISCONNECTED"},
  {PACKET_TYPE::MESSAGE, "MESSAGE"},
  {PACKET_TYPE::START, "START"},
  {PACKET_TYPE::LOAD_SCENE, "LOAD_SCENE"},
  {PACKET_TYPE::POSITION, "POSITION"},
  {PACKET_TYPE::YOUR_SHIP, "YOUR_SHIP"},
  {PACKET_TYPE::NEW_SHIP, "NEW_SHIP"},
  {PACKET_TYPE::SHIP_MOVEMENT, "SHIP_MOVEMENT"},
  {PACKET_TYPE::USER_INPUT, "USER_INPUT"},
  {PACKET_TYPE::NEW_PROJECTILE, "NEW_PROJECTILE"},
  {PACKET_TYPE::NEW_MONSTER, "NEW_MONSTER"},
  {PACKET_TYPE::MONSTER_KILLED, "MONSTER_KILLED"}
  };


#endif // PACKET_TYPES_HPP
